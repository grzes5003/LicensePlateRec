ocr_img_size_percent = 1.33333333
state_id_img_size_percent = 2.0

# detection will ignore plates that are too large.  This is a good efficiency technique to use if the
# plates are going to be a fixed distance away from the camera (e.g., you will never see plates that fill
# up the entire image
max_plate_width_percent = 50
max_plate_height_percent = 50

# detection_iteration_increase is the percentage that the LBP frame increases each iteration.
# It must be greater than 1.0.  A value of 1.01 means increase by 1%, 1.10 increases it by 10% each time.
# So a 1% increase would be ~10x slower than 10% to process, but it has a higher chance of landing
# directly on the plate and getting a strong detection
detection_iteration_increase = 1.05

# The minimum detection strength determines how sure the detection algorithm must be before signaling that
# a plate region exist. For example, 2 = very lenient, 9 = very strict.
detection_strictness = 4

# The detection doesn't necessarily need an extremely high resolution image in order to detect plates
# Using a smaller input image should still find the plates and will do it faster
# Tweaking the max_detection_input values will resize the input image if it is larger than these sizes
# max_detection_input_width/height are specified in pixels
max_detection_input_width = 1280
max_detection_input_height = 720

# If set to true, all results must match a postprocess regex pattern.
# If not, the result is disqualified.
must_match_pattern = 1

# image could be scanned multiple times with different randomization.  Setting this to a value larger than
# 1 may increase accuracy, but will increase processing time linearly (e.g., analysis_count = 3 is 3x slower)
analysis_count = 2


# below are the parameter which have no direct influence in the algorithm's performance,
# but may help to filter out results.

# Minimum OCR confidence percent to consider.
postprocess_min_confidence = 65

# Any OCR character lower than this will also add an equally likely
# chance that the character is incorrect and will be skipped.  Value is a confidence percent
postprocess_confidence_skip_level = 80

# there are so called debug flags, use them to get a deeper look on what's happening inside
debug_general         = 0
debug_timing          = 0
debug_detector        = 0
debug_prewarp         = 0
debug_state_id        = 0
debug_plate_lines     = 0
debug_plate_corners   = 0
debug_char_segment    = 0
debug_char_analysis   = 0
debug_color_filter    = 0
debug_ocr             = 0
debug_postprocess     = 0
debug_show_images     = 0
debug_pause_on_frame  = 0
